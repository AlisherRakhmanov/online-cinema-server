// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name       String
  email      String @unique
  password   String
  avatarPath String @default("/uploads/default-avatar.png") @map("avatar_path")

  role UserRole @default(USER)

  favorites Movie[]
  reviews   Review[]

  @@map("user")
}

model Movie {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  title     String
  slug      String @unique
  poster    String
  bigPoster String @map("big_poster")
  views     Int    @default(0)
  videoUrl  String @map("video_url")
  year      Int    @default(0)
  duration  Int    @default(0)
  country   String @default("")

  user   User?   @relation(fields: [userId], references: [id])
  userId String? @map("user_id")

  genres  Genre[]
  actors  Actor[]
  reviews Review[]

  @@map("movie")
}

model Genre {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name        String
  slug        String @unique
  description String
  icon        String

  movies Movie[]

  @@map("genre")
}

model Actor {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name     String
  slug     String @unique
  photoUrl String @map("photo_url")

  movies Movie[]

  @@map("actor")
}

model Review {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  text   String
  rating Int

  movie   Movie?  @relation(fields: [movieId], references: [id])
  movieId String? @map("movie_id")

  user   User?   @relation(fields: [userId], references: [id])
  userId String? @map("user_id")

  @@map("review")
}

enum UserRole {
  USER
  ADMIN
}
